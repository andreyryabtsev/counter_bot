{
    "alias": {
        "log": "animal"
    },
    "general": {
        "permission_denied_error": "You do not have permission to access this command!",
        "bot_name": "counter bot",
        "love_response": "Aww! :)",
        "ping_response": "!pong"
    },
    "etc": {
        "max_coins": 100,
        "message_delete_wait": 2500,
        "coin_error": "I can't flip that many coins!",
        "coin_output_many": "I got {n} heads!",
        "remindme_error": "Include a time and a note!",
        "rng_error": "Not a valid upper bound!",
        "filter_reply": "{u}, your message contained content disabled on this server and has been removed."
    },
    "plain_responses": {},
    "vote": {
        "proposal": "{u} wants to vote on *{n}*\n{v}",
        "proposal_error": "Please specify the number of options, list the options, and then name the vote!",
        "search_error": "A vote by this name does not exist!",
        "corruption_error": "The message representing this vote was deleted.",
        "search_error_blank": "You have never created a vote!"
    },
    "logs": {
        "log_response": "Thank you {u}, I have logged your animal product usage.",
        "undo_response": "{u}, I removed your last log entry!",
        "undo_error": "You have never used an animal product!",
        "when_response": "It has been {d} since {u} has used animal products! {s}",
        "when_error": "To my knowledge, {u} has never used an animal product. Commendable!",
        "chart_error": "Please specify between 1 and 365 days as the day count."
    },
    "quotes": {
        "author_error": "Tag someone to get a quote by them!",
        "name_error": "This user does not have a quote attribution name!",
        "name_response": "{u}'s quote attribution name is {n}",
        "add_error": "Please @mention someone and then write their new quote attribution name.",
        "quote_error": "Sadly, no quotes are available.",
        "format": "*\"{q}*\"\n                                        -{u}",
        "num_author_error": "Tag someone to get their quote count!",
        "num_quotes": "I found {n} quotes.",
        "pin_threshold": 2,
        "relevancy_params": {
            "weight": 0.7,
            "exponentiation": 2.2,
            "message_count": 7
        }
    },
    "reminders": {
        "reminder": "{u}, you asked me to remind you: {n}",
        "late_reminder": "{u}, I was offline but you asked me to remind you: {n}",
        "format_error": "Invalid time format!"
    },
    "clear": {
        "error": "Please specify a number of messages to remove (between 0 and 100)",
        "response": "I have cleared {n} messages for you."
    },
    "cfg": {
        "vocab_count_response": "I know {n} {t}s.",
        "teach_error": "Please specify a part of speech and a word.",
        "teach_present_error": "I already knew this word!",
        "forget_error": "Please specify a part of speech and a word.",
        "forget_missing_error": "I never knew this word!",
        "part_of_speech_error": "Valid parts of speech are: {c}",
        "vocab_error": "Please supply a valid part of speech or \"all\"."
    },
    "help_items": {
        "`!addquote <@mention> <quote>`": "attribute  `quote` to `@mention` (don't include quotation marks)",
        "`!chart <days> [@mention @mention ...]`": "produce a visualization your logs for the last `days` days; optionally show logs by `@mention`(s) instead",
        "*`!clear <count>`": "clear `count` of most recent messages in this channel",
        "*`!delquotes <query>`": "delete all quotes matching `query`; be careful, may delete many at once!",
        "*`!f <@mention>`": "move `@mention` to the AFK channel",
        "`!flipcoin [coins]`": "flip a coin either once or up to {etc.max_coins} times",
        "`!forget <part_of_speech> <phrase>`": "delete `phrase` from the `part_of_speech` list, if it exists there",
        "`!help`": "print this message",
        "`!name [@mention]`": "show the quote attribution name of yourself or `@mention`",
        "`!numquotes [query]`": "count the number of either all quotes or those matching `query`",
        "`!ping`": "get a response from bot, mainly to ensure it is running",
        "`!quote [query]`": "display a random quote matching `query`, or display any random quote with bias towards ones relevant to recent messages",
        "`!quoteby <@mention>`": "display a random quote by @mention",
        "`!rng <max>`": "randomly select a number between 1 and `max`",
        "`!setname [@mention] <name>`": "set your quote attribution name to `name`; optionally, set `@mention`'s name instead",
        "`!signature <word>`": "set your one-word (can be emoji) conclusion to `!when` calls about you",
        "`!speak [count]`": "produce a randomly generated sentence using learned vocabulary; optionally produce `count` sentences at once",
        "`!teach <part_of_speech> <phrase>`": "add `phrase` to the `part_of_speech` list, if not already there",
        "`!undo`": "permanently delete your most recent event log",
        "`!vocab <part_of_speech|\"all\"> [\"count\"]`": "list all known phrases in `part_of_speech` list, or all known phrases if \"all\", splitting into multiple messages if needed; optionally shows just the count",
        "`!vote <count> <opt1>...<optcount> <name>`": "initiate a vote on `name` with `count` options listed in `opt1` through `optcount`; votes are counted by reacting to the bot's reply",
        "`!votestatus [query]`": "report the current results for the most recent vote; optionally use the most recent vote whose name matches `query` instead",
        "`!when [@mention]`": "show your most recent event log with your custom signature; optionally show `@mention`'s log instead",
        "`!{alias.log} [caption]`": "add an event log; optionally caption it with `caption`",
        "**:pushpin: pinning**": "if {quotes.pin_threshold} users react with :pushpin: to a message, that message is added as a quote attributed to the message's author"
    },
    "help": {
        "header": "The following commands/features are available. ***** indicates the caller must be known as admin by the bot. `<args>` are requrired arguments while `[args]` are optional."
    }
}